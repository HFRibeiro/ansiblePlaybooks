- name: "Remove DockerPacks"
  apt: pkg={{ item }} state=absent
  with_items:
  - docker
  - docker-engine
  - docker.io
  - containerd
  - runc

- name: Update and upgrade apt packages
  become: true
  apt:
    upgrade: yes
    update_cache: yes
    cache_valid_time: 86400 #One day

- name: "Installing Docker Dependencies"
  apt: pkg={{ item }} state=present
  with_items:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg-agent
  - software-properties-common

- name: "Add Dockerâ€™s official GPG key" 
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- debug:
    msg: "This Distribution Release: {{ ansible_distribution_release }}"

- name: Add Docker APT repository Ubuntu
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable

- name: Update and upgrade apt packages
  become: true
  apt:
    upgrade: yes
    update_cache: yes
    cache_valid_time: 86400 #One day

- name: "Installing Docker packs"
  apt: pkg={{ item }} state=present
  with_items:
  - docker-ce
  - docker-ce-cli
  - containerd.io

- name: Post installation Docker
  shell: |
    groupadd -f docker 
    usermod -a -G docker {{ ansible_user_id }} 
    if [ -e '/home/{{ ansible_user_id }}/.docker/config.json' ]; then  
      chmod 0744 '/home/{{ ansible_user_id }}/.docker/config.json' 
    fi
    gpasswd -a {{ ansible_user_id }} docker

- shell: docker --version
  register: result

- debug:
    msg: "result: {{ result }} User: {{ ansible_user_id }}"

- name: Check for existing Docker Compose file
  stat:
    path: "/usr/local/bin/docker-compose"
  register: docker__register_docker_compose

- debug:
    msg: "File: {{ docker__register_docker_compose }}"

- name: Install docker-compose
  shell: |
    curl -L "https://github.com/docker/compose/releases/download/1.23.2/docker-compose-Linux-x86_64" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    
