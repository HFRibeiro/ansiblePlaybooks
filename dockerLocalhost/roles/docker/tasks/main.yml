- name: "Remove DockerPacks"
  apt: pkg={{ item }} state=absent
  with_items:
  - docker
  - docker-engine
  - docker.io
  - containerd
  - runc

- name: Update and upgrade apt packages
  become: true
  apt:
    upgrade: yes
    update_cache: yes
    cache_valid_time: 86400 #One day

- name: "Installing Docker Dependencies"
  apt: pkg={{ item }} state=present
  with_items:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg-agent
  - software-properties-common
  - make

- name: "Add Dockerâ€™s official GPG key" 
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- debug:
    msg: "This Distribution Release: {{ ansible_distribution_release }}"

- name: Add Docker APT repository Ubuntu
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable

- name: Update and upgrade apt packages
  become: true
  apt:
    upgrade: yes
    update_cache: yes
    cache_valid_time: 86400 #One day

- name: "Installing Docker packs"
  apt: pkg={{ item }} state=present
  with_items:
  - docker-ce
  - docker-ce-cli
  - containerd.io

- name: get the username running the deploy
  become: false
  local_action: command whoami
  register: username_on_the_host

- name: Post installation Docker
  shell: |
    groupadd -f docker 
    usermod -a -G docker {{ username_on_the_host.stdout }} 
    if [ -e '/home/{{ username_on_the_host.stdout }}/.docker/config.json' ]; then  
      chmod 0744 '/home/{{ username_on_the_host.stdout }}/.docker/config.json' 
    fi
    gpasswd -a {{ username_on_the_host.stdout }} docker

- shell: docker --version
  register: result

- debug:
    msg: "result: {{ result }} User: {{ username_on_the_host.stdout }}"

- debug:
    msg: "Ansible vars ansible_distribution: {{ ansible_distribution }}  ansible_distribution_release: {{ ansible_distribution_release }} \
    ansible_distribution_file_variety: {{ ansible_distribution_file_variety }} ansible_architecture: {{ ansible_architecture }}\
    ansible_system : {{ ansible_system }}"

- name: "Install docker-compose"
  shell: |
    curl -L "https://github.com/docker/compose/releases/download/1.23.2/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose

- name: Restart
  command: /sbin/shutdown -r +1
  async: 0
  poll: 0
  ignore_errors: true

